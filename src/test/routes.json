{
    "/wp/v2/posts": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "after": {
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_after": {
                "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "author": {
                "description": "Limit result set to posts assigned to specific authors.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "author_exclude": {
                "description": "Ensure result set excludes posts assigned to specific authors.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "before": {
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_before": {
                "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by post attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "author",
                    "date",
                    "id",
                    "include",
                    "modified",
                    "parent",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            },
            "slug": {
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            },
            "status": {
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                    "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                    ],
                    "type": "string"
                },
                "required": false
            },
            "tax_relation": {
                "description": "Limit result set based on relationship between multiple taxonomies.",
                "type": "string",
                "enum": [
                    "AND",
                    "OR"
                ],
                "required": false
            },
            "categories": {
                "description": "Limit result set to items with specific terms assigned in the categories taxonomy.",
                "type": [
                    "object",
                    "array"
                ],
                "oneOf": [
                    {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                            "terms": {
                                "description": "Term IDs.",
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "default": []
                            },
                            "include_children": {
                                "description": "Whether to include child terms in the terms limiting the result set.",
                                "type": "boolean",
                                "default": false
                            },
                            "operator": {
                                "description": "Whether items must be assigned all or any of the specified terms.",
                                "type": "string",
                                "enum": [
                                    "AND",
                                    "OR"
                                ],
                                "default": "OR"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "required": false
            },
            "categories_exclude": {
                "description": "Limit result set to items except those with specific terms assigned in the categories taxonomy.",
                "type": [
                    "object",
                    "array"
                ],
                "oneOf": [
                    {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                            "terms": {
                                "description": "Term IDs.",
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "default": []
                            },
                            "include_children": {
                                "description": "Whether to include child terms in the terms limiting the result set.",
                                "type": "boolean",
                                "default": false
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "required": false
            },
            "tags": {
                "description": "Limit result set to items with specific terms assigned in the tags taxonomy.",
                "type": [
                    "object",
                    "array"
                ],
                "oneOf": [
                    {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                            "terms": {
                                "description": "Term IDs.",
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "default": []
                            },
                            "operator": {
                                "description": "Whether items must be assigned all or any of the specified terms.",
                                "type": "string",
                                "enum": [
                                    "AND",
                                    "OR"
                                ],
                                "default": "OR"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "required": false
            },
            "tags_exclude": {
                "description": "Limit result set to items except those with specific terms assigned in the tags taxonomy.",
                "type": [
                    "object",
                    "array"
                ],
                "oneOf": [
                    {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                            "terms": {
                                "description": "Term IDs.",
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "default": []
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "required": false
            },
            "sticky": {
                "description": "Limit result set to items that are sticky.",
                "type": "boolean",
                "required": false
            }
        }
    },
    "/wp/v2/posts/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the post.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "password": {
                "description": "The password for the post if it is password protected.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/posts/(?P<parent>[\\d]+)/revisions": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by object attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "date",
                    "id",
                    "include",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            }
        }
    },
    "/wp/v2/posts/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "Unique identifier for the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/posts/(?P<id>[\\d]+)/autosaves": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/posts/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "The ID for the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/pages": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "after": {
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_after": {
                "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "author": {
                "description": "Limit result set to posts assigned to specific authors.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "author_exclude": {
                "description": "Ensure result set excludes posts assigned to specific authors.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "before": {
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_before": {
                "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "menu_order": {
                "description": "Limit result set to posts with a specific menu_order value.",
                "type": "integer",
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by post attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "author",
                    "date",
                    "id",
                    "include",
                    "modified",
                    "parent",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title",
                    "menu_order"
                ],
                "required": false
            },
            "parent": {
                "description": "Limit result set to items with particular parent IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "parent_exclude": {
                "description": "Limit result set to all items except those of a particular parent ID.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "slug": {
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            },
            "status": {
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                    "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                    ],
                    "type": "string"
                },
                "required": false
            }
        }
    },
    "/wp/v2/pages/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the post.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "password": {
                "description": "The password for the post if it is password protected.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/pages/(?P<parent>[\\d]+)/revisions": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by object attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "date",
                    "id",
                    "include",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            }
        }
    },
    "/wp/v2/pages/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "Unique identifier for the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/pages/(?P<id>[\\d]+)/autosaves": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/pages/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "The ID for the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/media": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "after": {
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_after": {
                "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "author": {
                "description": "Limit result set to posts assigned to specific authors.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "author_exclude": {
                "description": "Ensure result set excludes posts assigned to specific authors.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "before": {
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_before": {
                "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by post attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "author",
                    "date",
                    "id",
                    "include",
                    "modified",
                    "parent",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            },
            "parent": {
                "description": "Limit result set to items with particular parent IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "parent_exclude": {
                "description": "Limit result set to all items except those of a particular parent ID.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "slug": {
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            },
            "status": {
                "default": "inherit",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                    "enum": [
                        "inherit",
                        "private",
                        "trash"
                    ],
                    "type": "string"
                },
                "required": false
            },
            "media_type": {
                "default": null,
                "description": "Limit result set to attachments of a particular media type.",
                "type": "string",
                "enum": [
                    "image",
                    "video",
                    "text",
                    "application",
                    "audio"
                ],
                "required": false
            },
            "mime_type": {
                "default": null,
                "description": "Limit result set to attachments of a particular MIME type.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/media/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the post.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/media/(?P<id>[\\d]+)/post-process": {},
    "/wp/v2/media/(?P<id>[\\d]+)/edit": {},
    "/wp/v2/menu-items": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 100,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "after": {
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_after": {
                "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "before": {
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_before": {
                "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "asc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by object attribute.",
                "type": "string",
                "default": "menu_order",
                "enum": [
                    "author",
                    "date",
                    "id",
                    "include",
                    "modified",
                    "parent",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title",
                    "menu_order"
                ],
                "required": false
            },
            "slug": {
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            },
            "status": {
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                    "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                    ],
                    "type": "string"
                },
                "required": false
            },
            "tax_relation": {
                "description": "Limit result set based on relationship between multiple taxonomies.",
                "type": "string",
                "enum": [
                    "AND",
                    "OR"
                ],
                "required": false
            },
            "menus": {
                "description": "Limit result set to items with specific terms assigned in the menus taxonomy.",
                "type": [
                    "object",
                    "array"
                ],
                "oneOf": [
                    {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                            "terms": {
                                "description": "Term IDs.",
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "default": []
                            },
                            "operator": {
                                "description": "Whether items must be assigned all or any of the specified terms.",
                                "type": "string",
                                "enum": [
                                    "AND",
                                    "OR"
                                ],
                                "default": "OR"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "required": false
            },
            "menus_exclude": {
                "description": "Limit result set to items except those with specific terms assigned in the menus taxonomy.",
                "type": [
                    "object",
                    "array"
                ],
                "oneOf": [
                    {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                            "terms": {
                                "description": "Term IDs.",
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "default": []
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "required": false
            },
            "menu_order": {
                "description": "Limit result set to posts with a specific menu_order value.",
                "type": "integer",
                "required": false
            }
        }
    },
    "/wp/v2/menu-items/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the post.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/menu-items/(?P<id>[\\d]+)/autosaves": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/menu-items/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "The ID for the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/blocks": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "after": {
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_after": {
                "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "before": {
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_before": {
                "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by post attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "author",
                    "date",
                    "id",
                    "include",
                    "modified",
                    "parent",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            },
            "slug": {
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            },
            "status": {
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                    "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                    ],
                    "type": "string"
                },
                "required": false
            }
        }
    },
    "/wp/v2/blocks/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the post.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "password": {
                "description": "The password for the post if it is password protected.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/blocks/(?P<parent>[\\d]+)/revisions": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by object attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "date",
                    "id",
                    "include",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            }
        }
    },
    "/wp/v2/blocks/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "Unique identifier for the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/blocks/(?P<id>[\\d]+)/autosaves": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/blocks/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "The ID for the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/templates": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "wp_id": {
                "description": "Limit to the specified post id.",
                "type": "integer",
                "required": false
            },
            "area": {
                "description": "Limit to the specified template part area.",
                "type": "string",
                "required": false
            },
            "post_type": {
                "description": "Post type to get the templates for.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/templates/lookup": {
        "endpoints": {
            "slug": {
                "description": "The slug of the template to get the fallback for",
                "type": "string",
                "required": true
            },
            "is_custom": {
                "description": "Indicates if a template is custom or part of the template hierarchy",
                "type": "boolean",
                "required": false
            },
            "template_prefix": {
                "description": "The template prefix for the created template. This is used to extract the main template type, e.g. in `taxonomy-books` extracts the `taxonomy`",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/templates/(?P<id>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w-]+)": {
        "endpoints": {
            "id": {
                "description": "The id of a template",
                "type": "string",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/templates/(?P<parent>[\\d]+)/revisions": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by object attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "date",
                    "id",
                    "include",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            }
        }
    },
    "/wp/v2/templates/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "Unique identifier for the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/templates/(?P<id>[\\d]+)/autosaves": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/templates/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "The ID for the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/template-parts": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "wp_id": {
                "description": "Limit to the specified post id.",
                "type": "integer",
                "required": false
            },
            "area": {
                "description": "Limit to the specified template part area.",
                "type": "string",
                "required": false
            },
            "post_type": {
                "description": "Post type to get the templates for.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/template-parts/lookup": {
        "endpoints": {
            "slug": {
                "description": "The slug of the template to get the fallback for",
                "type": "string",
                "required": true
            },
            "is_custom": {
                "description": "Indicates if a template is custom or part of the template hierarchy",
                "type": "boolean",
                "required": false
            },
            "template_prefix": {
                "description": "The template prefix for the created template. This is used to extract the main template type, e.g. in `taxonomy-books` extracts the `taxonomy`",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/template-parts/(?P<id>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w-]+)": {
        "endpoints": {
            "id": {
                "description": "The id of a template",
                "type": "string",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/template-parts/(?P<parent>[\\d]+)/revisions": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by object attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "date",
                    "id",
                    "include",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            }
        }
    },
    "/wp/v2/template-parts/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "Unique identifier for the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/template-parts/(?P<id>[\\d]+)/autosaves": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/template-parts/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "The ID for the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/navigation": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "after": {
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_after": {
                "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "before": {
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_before": {
                "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by post attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "author",
                    "date",
                    "id",
                    "include",
                    "modified",
                    "parent",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            },
            "slug": {
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            },
            "status": {
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                    "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                    ],
                    "type": "string"
                },
                "required": false
            }
        }
    },
    "/wp/v2/navigation/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the post.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "password": {
                "description": "The password for the post if it is password protected.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/navigation/(?P<parent>[\\d]+)/revisions": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by object attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "date",
                    "id",
                    "include",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            }
        }
    },
    "/wp/v2/navigation/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "Unique identifier for the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/navigation/(?P<id>[\\d]+)/autosaves": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/navigation/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "The ID for the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/kadence_lottie": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "after": {
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_after": {
                "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "before": {
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_before": {
                "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by post attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "author",
                    "date",
                    "id",
                    "include",
                    "modified",
                    "parent",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            },
            "slug": {
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            },
            "status": {
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                    "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                    ],
                    "type": "string"
                },
                "required": false
            }
        }
    },
    "/wp/v2/kadence_lottie/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the post.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "password": {
                "description": "The password for the post if it is password protected.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/kadence_lottie/(?P<parent>[\\d]+)/revisions": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by object attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "date",
                    "id",
                    "include",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            }
        }
    },
    "/wp/v2/kadence_lottie/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the revision.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "Unique identifier for the revision.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/kadence_lottie/(?P<id>[\\d]+)/autosaves": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/kadence_lottie/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "The ID for the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/wp_job_board": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "after": {
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_after": {
                "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "before": {
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "modified_before": {
                "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by post attribute.",
                "type": "string",
                "default": "date",
                "enum": [
                    "author",
                    "date",
                    "id",
                    "include",
                    "modified",
                    "parent",
                    "relevance",
                    "slug",
                    "include_slugs",
                    "title"
                ],
                "required": false
            },
            "slug": {
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            },
            "status": {
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                    "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                    ],
                    "type": "string"
                },
                "required": false
            }
        }
    },
    "/wp/v2/wp_job_board/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the post.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "password": {
                "description": "The password for the post if it is password protected.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/wp_job_board/(?P<id>[\\d]+)/autosaves": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/wp_job_board/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
        "endpoints": {
            "parent": {
                "description": "The ID for the parent of the autosave.",
                "type": "integer",
                "required": false
            },
            "id": {
                "description": "The ID for the autosave.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/types": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/types/(?P<type>[\\w-]+)": {
        "endpoints": {
            "type": {
                "description": "An alphanumeric identifier for the post type.",
                "type": "string",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/statuses": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/statuses/(?P<status>[\\w-]+)": {
        "endpoints": {
            "status": {
                "description": "An alphanumeric identifier for the status.",
                "type": "string",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/taxonomies": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "type": {
                "description": "Limit results to taxonomies associated with a specific post type.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/taxonomies/(?P<taxonomy>[\\w-]+)": {
        "endpoints": {
            "taxonomy": {
                "description": "An alphanumeric identifier for the taxonomy.",
                "type": "string",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/categories": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "asc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by term attribute.",
                "type": "string",
                "default": "name",
                "enum": [
                    "id",
                    "include",
                    "name",
                    "slug",
                    "include_slugs",
                    "term_group",
                    "description",
                    "count"
                ],
                "required": false
            },
            "hide_empty": {
                "description": "Whether to hide terms not assigned to any posts.",
                "type": "boolean",
                "default": false,
                "required": false
            },
            "parent": {
                "description": "Limit result set to terms assigned to a specific parent.",
                "type": "integer",
                "required": false
            },
            "post": {
                "description": "Limit result set to terms assigned to a specific post.",
                "type": "integer",
                "default": null,
                "required": false
            },
            "slug": {
                "description": "Limit result set to terms with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            }
        }
    },
    "/wp/v2/categories/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the term.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/tags": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "asc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by term attribute.",
                "type": "string",
                "default": "name",
                "enum": [
                    "id",
                    "include",
                    "name",
                    "slug",
                    "include_slugs",
                    "term_group",
                    "description",
                    "count"
                ],
                "required": false
            },
            "hide_empty": {
                "description": "Whether to hide terms not assigned to any posts.",
                "type": "boolean",
                "default": false,
                "required": false
            },
            "post": {
                "description": "Limit result set to terms assigned to a specific post.",
                "type": "integer",
                "default": null,
                "required": false
            },
            "slug": {
                "description": "Limit result set to terms with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            }
        }
    },
    "/wp/v2/tags/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the term.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/menus": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "asc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by term attribute.",
                "type": "string",
                "default": "name",
                "enum": [
                    "id",
                    "include",
                    "name",
                    "slug",
                    "include_slugs",
                    "term_group",
                    "description",
                    "count"
                ],
                "required": false
            },
            "hide_empty": {
                "description": "Whether to hide terms not assigned to any posts.",
                "type": "boolean",
                "default": false,
                "required": false
            },
            "post": {
                "description": "Limit result set to terms assigned to a specific post.",
                "type": "integer",
                "default": null,
                "required": false
            },
            "slug": {
                "description": "Limit result set to terms with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            }
        }
    },
    "/wp/v2/menus/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the term.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/users": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "default": "asc",
                "description": "Order sort attribute ascending or descending.",
                "enum": [
                    "asc",
                    "desc"
                ],
                "type": "string",
                "required": false
            },
            "orderby": {
                "default": "name",
                "description": "Sort collection by user attribute.",
                "enum": [
                    "id",
                    "include",
                    "name",
                    "registered_date",
                    "slug",
                    "include_slugs",
                    "email",
                    "url"
                ],
                "type": "string",
                "required": false
            },
            "slug": {
                "description": "Limit result set to users with one or more specific slugs.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            },
            "roles": {
                "description": "Limit result set to users matching at least one specific role provided. Accepts csv list or single role.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            },
            "capabilities": {
                "description": "Limit result set to users matching at least one specific capability provided. Accepts csv list or single capability.",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "required": false
            },
            "who": {
                "description": "Limit result set to users who are considered authors.",
                "type": "string",
                "enum": [
                    "authors"
                ],
                "required": false
            },
            "has_published_posts": {
                "description": "Limit result set to users who have published posts.",
                "type": [
                    "boolean",
                    "array"
                ],
                "items": {
                    "type": "string",
                    "enum": {
                        "post": "post",
                        "page": "page",
                        "attachment": "attachment",
                        "nav_menu_item": "nav_menu_item",
                        "wp_block": "wp_block",
                        "wp_template": "wp_template",
                        "wp_template_part": "wp_template_part",
                        "wp_navigation": "wp_navigation",
                        "kadence_lottie": "kadence_lottie",
                        "wp_job_board": "wp_job_board"
                    }
                },
                "required": false
            }
        }
    },
    "/wp/v2/users/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the user.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/users/me": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/users/(?P<user_id>(?:[\\d]+|me))/application-passwords": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/users/(?P<user_id>(?:[\\d]+|me))/application-passwords/introspect": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/users/(?P<user_id>(?:[\\d]+|me))/application-passwords/(?P<uuid>[\\w\\-]+)": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/comments": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "after": {
                "description": "Limit response to comments published after a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "author": {
                "description": "Limit result set to comments assigned to specific user IDs. Requires authorization.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "required": false
            },
            "author_exclude": {
                "description": "Ensure result set excludes comments assigned to specific user IDs. Requires authorization.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "required": false
            },
            "author_email": {
                "default": null,
                "description": "Limit result set to that from a specific author email. Requires authorization.",
                "format": "email",
                "type": "string",
                "required": false
            },
            "before": {
                "description": "Limit response to comments published before a given ISO8601 compliant date.",
                "type": "string",
                "format": "date-time",
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "offset": {
                "description": "Offset the result set by a specific number of items.",
                "type": "integer",
                "required": false
            },
            "order": {
                "description": "Order sort attribute ascending or descending.",
                "type": "string",
                "default": "desc",
                "enum": [
                    "asc",
                    "desc"
                ],
                "required": false
            },
            "orderby": {
                "description": "Sort collection by comment attribute.",
                "type": "string",
                "default": "date_gmt",
                "enum": [
                    "date",
                    "date_gmt",
                    "id",
                    "include",
                    "post",
                    "parent",
                    "type"
                ],
                "required": false
            },
            "parent": {
                "default": [],
                "description": "Limit result set to comments of specific parent IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "required": false
            },
            "parent_exclude": {
                "default": [],
                "description": "Ensure result set excludes specific parent IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "required": false
            },
            "post": {
                "default": [],
                "description": "Limit result set to comments assigned to specific post IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "required": false
            },
            "status": {
                "default": "approve",
                "description": "Limit result set to comments assigned a specific status. Requires authorization.",
                "type": "string",
                "required": false
            },
            "type": {
                "default": "comment",
                "description": "Limit result set to comments assigned a specific type. Requires authorization.",
                "type": "string",
                "required": false
            },
            "password": {
                "description": "The password for the post if it is password protected.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/comments/(?P<id>[\\d]+)": {
        "endpoints": {
            "id": {
                "description": "Unique identifier for the comment.",
                "type": "integer",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "password": {
                "description": "The password for the parent post of the comment (if the post is password protected).",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/search": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "type": {
                "default": "post",
                "description": "Limit results to items of an object type.",
                "type": "string",
                "enum": [
                    "post",
                    "term",
                    "post-format"
                ],
                "required": false
            },
            "subtype": {
                "default": "any",
                "description": "Limit results to items of one or more object subtypes.",
                "type": "array",
                "items": {
                    "enum": [
                        "post",
                        "page",
                        "wp_job_board",
                        "category",
                        "post_tag",
                        "any"
                    ],
                    "type": "string"
                },
                "required": false
            },
            "exclude": {
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            },
            "include": {
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "default": [],
                "required": false
            }
        }
    },
    "/wp/v2/block-renderer/(?P<name>[a-z0-9-]+/[a-z0-9-]+)": {
        "endpoints": {
            "name": {
                "description": "Unique registered name for the block.",
                "type": "string",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "attributes": {
                "description": "Attributes for the block.",
                "type": "object",
                "default": [],
                "required": false
            },
            "post_id": {
                "description": "ID of the post context.",
                "type": "integer",
                "required": false
            }
        }
    },
    "/wp/v2/block-types": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "namespace": {
                "description": "Block namespace.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/block-types/(?P<namespace>[a-zA-Z0-9_-]+)": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "namespace": {
                "description": "Block namespace.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/block-types/(?P<namespace>[a-zA-Z0-9_-]+)/(?P<name>[a-zA-Z0-9_-]+)": {
        "endpoints": {
            "name": {
                "description": "Block name.",
                "type": "string",
                "required": false
            },
            "namespace": {
                "description": "Block namespace.",
                "type": "string",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/global-styles/themes/(?P<stylesheet>[\\/\\s%\\w\\.\\(\\)\\[\\]\\@_\\-]+)/variations": {
        "endpoints": {
            "stylesheet": {
                "description": "The theme identifier",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/global-styles/themes/(?P<stylesheet>[^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)": {
        "endpoints": {
            "stylesheet": {
                "description": "The theme identifier",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/global-styles/(?P<id>[\\/\\w-]+)": {
        "endpoints": {
            "id": {
                "description": "The id of a template",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/settings": {
        "endpoints": []
    },
    "/wp/v2/themes": {
        "endpoints": {
            "status": {
                "description": "Limit result set to themes assigned one or more statuses.",
                "type": "array",
                "items": {
                    "enum": [
                        "active",
                        "inactive"
                    ],
                    "type": "string"
                },
                "required": false
            }
        }
    },
    "/wp/v2/themes/(?P<stylesheet>[^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)": {
        "endpoints": {
            "stylesheet": {
                "description": "The theme's stylesheet. This uniquely identifies the theme.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/plugins": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "required": false
            },
            "status": {
                "description": "Limits results to plugins with the given status.",
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "inactive",
                        "active"
                    ]
                },
                "required": false
            }
        }
    },
    "/wp/v2/plugins/(?P<plugin>[^.\\/]+(?:\\/[^.\\/]+)?)": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "plugin": {
                "type": "string",
                "pattern": "[^.\\/]+(?:\\/[^.\\/]+)?",
                "required": false
            }
        }
    },
    "/wp/v2/sidebars": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/sidebars/(?P<id>[\\w-]+)": {
        "endpoints": {
            "id": {
                "description": "The id of a registered sidebar",
                "type": "string",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/widget-types": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/widget-types/(?P<id>[a-zA-Z0-9_-]+)": {
        "endpoints": {
            "id": {
                "description": "The widget type id.",
                "type": "string",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/widget-types/(?P<id>[a-zA-Z0-9_-]+)/encode": {},
    "/wp/v2/widget-types/(?P<id>[a-zA-Z0-9_-]+)/render": {},
    "/wp/v2/widgets": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "sidebar": {
                "description": "The sidebar to return widgets for.",
                "type": "string",
                "required": false
            }
        }
    },
    "/wp/v2/widgets/(?P<id>[\\w\\-]+)": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/block-directory/search": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view"
                ],
                "default": "view",
                "required": false
            },
            "page": {
                "description": "Current page of the collection.",
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "required": false
            },
            "per_page": {
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 100,
                "required": false
            },
            "term": {
                "description": "Limit result set to blocks matching the search term.",
                "type": "string",
                "minLength": 1,
                "required": true
            }
        }
    },
    "/wp/v2/pattern-directory/patterns": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            },
            "search": {
                "description": "Limit results to those matching a string.",
                "type": "string",
                "minLength": 1,
                "required": false
            },
            "category": {
                "description": "Limit results to those matching a category ID.",
                "type": "integer",
                "minimum": 1,
                "required": false
            },
            "keyword": {
                "description": "Limit results to those matching a keyword ID.",
                "type": "integer",
                "minimum": 1,
                "required": false
            },
            "slug": {
                "description": "Limit results to those matching a pattern (slug).",
                "type": "array",
                "required": false
            }
        }
    },
    "/wp/v2/block-patterns/patterns": {
        "endpoints": []
    },
    "/wp/v2/block-patterns/categories": {
        "endpoints": []
    },
    "/wp/v2/menu-locations": {
        "endpoints": {
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    },
    "/wp/v2/menu-locations/(?P<location>[\\w-]+)": {
        "endpoints": {
            "location": {
                "description": "An alphanumeric identifier for the menu location.",
                "type": "string",
                "required": false
            },
            "context": {
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string",
                "enum": [
                    "view",
                    "embed",
                    "edit"
                ],
                "default": "view",
                "required": false
            }
        }
    }
}